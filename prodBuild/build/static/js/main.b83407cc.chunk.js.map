{"version":3,"sources":["firebase.js","context/UserAuthContext.js","components/Login.js","components/Signup.js","components/PhoneSignUp.js","components/ProtectedRoute.js","components/services/book.services.js","components/modal/Modal.js","components/buisnessLogic/AddBook.js","components/services/pacient.services.js","components/buisnessLogic/AddPacient.js","components/buisnessLogic/PacientsList.js","components/buisnessLogic/DoctorsList.js","components/buisnessLogic/Home.js","components/buisnessLogic/AddDoctor.js","components/buisnessLogic/AddRegisterOrder.js","components/buisnessLogic/RegisterOrderList.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","userAuthContext","createContext","UserAuthContextProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","user","setUser","useEffect","unsubscribe","onAuthStateChanged","currentuser","console","log","_jsx","Provider","value","logIn","email","password","signInWithEmailAndPassword","signUp","createUserWithEmailAndPassword","logOut","signOut","googleSignIn","googleAuthProvider","GoogleAuthProvider","signInWithPopup","setUpRecaptha","number","recaptchaVerifier","RecaptchaVerifier","render","signInWithPhoneNumber","useUserAuth","useContext","Login","setEmail","_useState3","_useState4","setPassword","_useState5","_useState6","error","setError","_useUserAuth","navigate","useNavigate","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","t0","message","stop","_x","apply","arguments","_jsxs","_Fragment","className","Alert","variant","Form","onSubmit","Group","controlId","Control","type","placeholder","onChange","target","Button","Link","to","Signup","firstName","setFirstName","_useState7","_useState8","_yield$signUp","sent","setDoc","doc","uid","role","Error","PhoneSignUp","setNumber","flag","setFlag","otp","setOtp","_useState9","_useState10","result","setResult","_useState11","_useState12","NumbersDB","setNumbersDB","_useState13","_useState14","OtpDB","setOtpDB","getOtp","response","undefined","abrupt","verifyOtp","_ref2","_callee2","_context2","confirm","addRecordNumberToDb","localStorage","setItem","JSON","stringify","NumberAndCode","_x2","phoneSignIn","_ref3","_callee3","n","nn","c","cc","isEqual","_context3","getItem","parse","_x3","props","style","display","PhoneInput","defaultCountry","id","ProtectedRoute","Navigate","bookCollectionRef","collection","BookDataService","_classCallCheck","addBooks","newBook","addDoc","updateBook","updatedBook","bookDoc","updateDoc","deleteBook","deleteDoc","getAllBooks","getDocs","getBook","getDoc","Modal","open","modalLable","custom_modal","onClose","onClick","concat","AddBook","setBookId","setTitle","setAuthor","status","setStatus","msg","setMessage","Name","setName","Age","setAge","_useState15","_useState16","LastName","setLastName","_useState17","_useState18","Phone","setPhone","_useState19","_useState20","Schedule","setSchedule","_useState21","_useState22","Specialization","setSpecialization","getBookId","editHandler","docSnap","data","title","author","name","dismissible","InputGroup","Text","ButtonGroup","disabled","managersCollectionRef","bookCollectionRefDoctors","PacientDataService","getAllM","getAllDcotors","AddPacient","doctors","setDoctors","zayavka","setZayavka","zayavkaTime","setZayavkaTime","pacientServices","getDoctors","_ref4","docs","map","_objectSpread","index","defaultValue","PacientsList","books","setBooks","managers","setManagers","selectedStatus","setSelectedStatus","usr","setUsr","setUsrNAME","_useState23","_useState24","getAllm","getBooks","currentUser","userId","getCurrentUserId","da","updateStatus","_ref6","_callee5","newStatus","bookRef","bookSnapshot","bookData","_context5","manager","THISUSER","alert","_x4","_x5","managedBy","_ref7","_callee6","_context6","_x6","_x7","filteredBooks","filter","book","i","length","Table","striped","bordered","hover","size","Dropdown","Toggle","Menu","option","Item","handleStatusFilter","companyName","companyBin","fio","objectName","srokStroitelstva","phone","toDate","toLocaleString","DoctorsList","openAddModal","setOpenAddModal","bookId","handleLogout","Container","Row","Col","Home","setUsername","NavLink","AddDoctor","addTodo","docRef","lname","age","schedule","specialization","created","Timestamp","now","AddRegisterOrder","Address","setAddress","pacient","setPacient","_useState25","_useState26","_useState27","_useState28","VrachName","setVrachName","_useState29","_useState30","VrachAge","_useState31","_useState32","VrachLastName","_useState33","_useState34","VrachPhone","_useState35","_useState36","_useState37","_useState38","VrachSpecialization","getPacient","VrachsetLastName","address","RegisterOrderList","dataDoctors","deleteHandler","getBookIdHandler","App","Routes","Route","path","element","ReactDOM","React","StrictMode","Router","document","getElementById"],"mappings":"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","file":"static/js/main.b83407cc.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport 'firebase/firestore';\nimport { getFirestore } from \"firebase/firestore\";\n\nimport \"firebase/storage\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD0Z2DzlrHE3oSumppOAUcFA51fOQfdfqk\",\n  authDomain: \"betonn-8560a.firebaseapp.com\",\n  projectId: \"betonn-8560a\",\n  storageBucket: \"betonn-8560a.appspot.com\",\n  messagingSenderId: \"404130189314\",\n  appId: \"1:404130189314:web:3858ef293056d14e88171b\",\n  measurementId: \"G-C5QXXF1SJ3\"\n};\n\n\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db=getFirestore(app)\n\nexport default (app);\n\n\n\n\n// import { initializeApp } from \"firebase/app\";\n// import { getAuth } from \"firebase/auth\";\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyD0Z2DzlrHE3oSumppOAUcFA51fOQfdfqk\",\n//   authDomain: \"betonn-8560a.firebaseapp.com\",\n//   projectId: \"betonn-8560a\",\n//   storageBucket: \"betonn-8560a.appspot.com\",\n//   messagingSenderId: \"404130189314\",\n//   appId: \"1:404130189314:web:3858ef293056d14e88171b\",\n//   measurementId: \"G-C5QXXF1SJ3\"\n// };\n\n// // Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n// export const auth = getAuth(app);\n\n\n// export default (app);","import { createContext, useContext, useEffect, useState } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n  GoogleAuthProvider,\n  signInWithPopup,\n  RecaptchaVerifier,\n  signInWithPhoneNumber,\n} from \"firebase/auth\";\nimport { auth } from \"../firebase\";\n\nconst userAuthContext = createContext();\n\nexport function UserAuthContextProvider({ children }) {\n  const [user, setUser] = useState({});\n\n  function logIn(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n  function signUp(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n  function logOut() {\n    return signOut(auth);\n  }\n  function googleSignIn() {\n    const googleAuthProvider = new GoogleAuthProvider();\n    return signInWithPopup(auth, googleAuthProvider);\n  }\n\n  function setUpRecaptha(number) {\n    const recaptchaVerifier = new RecaptchaVerifier(\n      \"recaptcha-container\",\n      {},\n      auth\n    );\n    recaptchaVerifier.render();\n    return signInWithPhoneNumber(auth, number, recaptchaVerifier);\n  }\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentuser) => {\n      console.log(\"Auth\", currentuser);\n      setUser(currentuser);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <userAuthContext.Provider\n      value={{\n        user,\n        logIn,\n        signUp,\n        logOut,\n        googleSignIn,\n        setUpRecaptha,\n      }}\n    >\n      {children}\n    </userAuthContext.Provider>\n  );\n}\n\nexport function useUserAuth() {\n  return useContext(userAuthContext);\n}\n","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Alert } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport GoogleButton from \"react-google-button\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const { logIn, googleSignIn } = useUserAuth();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      await logIn(email, password);\n      navigate(\"/home\");\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleGoogleSignIn = async (e) => {\n    e.preventDefault();\n    try {\n      await googleSignIn();\n      navigate(\"/home\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"p-4 box\">\n        <h2 className=\"mb-3\">Авторизация</h2>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email address\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" type=\"Submit\">\n              Log In\n            </Button>\n          </div>\n        </Form>\n        <hr />\n        {/* <div>\n          <GoogleButton\n            className=\"g-btn\"\n            type=\"dark\"\n            onClick={handleGoogleSignIn}\n          />\n        </div>\n        <Link to=\"/phonesignup\">\n          <div className=\"d-grid gap-2 mt-3\">\n            <Button variant=\"success\" type=\"Submit\">\n              Sign in with Phone\n            </Button>\n          </div>\n        </Link> */}\n      </div>\n      <div className=\"p-4 box mt-3 text-center\">\n        Don't have an account? <Link to=\"/signup\">Sign up</Link>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Alert } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\nimport { doc, setDoc } from \"firebase/firestore\"; \nimport {db} from '../firebase';\nimport firebase, { auth } from \"../firebase\";\nconst Signup = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { signUp } = useUserAuth();\n  let navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n  \n    e.preventDefault();\n    setError(\"\");\n    try {\n      const { user } = await signUp(email, password);\n\n      await setDoc(doc(db, \"users\", user.uid), {\n        firstName: firstName,\n        email: email,\n        uid: user.uid,\n        role:'manager'\n      });\n    } catch (err) {\n      throw new Error(\"Failed to add user to Firestore: \" + err.message);\n    }\n    navigate(\"/\");\n  };\n\n  return (\n    <>\n      <div className=\"p-4 box\">\n        <h2 className=\"mb-3\">Регистрация</h2>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicFirstName\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"First Name\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email address\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" type=\"Submit\">\n              Sign up\n            </Button>\n          </div>\n        </Form>\n      </div>\n      <div className=\"p-4 box mt-3 text-center\">\n        Already have an account? <Link to=\"/\">Log In</Link>\n      </div>\n    </>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Alert } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput from \"react-phone-number-input\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\n\n\nconst PhoneSignUp = () => {\n  const [error, setError] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [flag, setFlag] = useState(false);\n  const [otp, setOtp] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const { setUpRecaptha } = useUserAuth();\n  const [NumbersDB, setNumbersDB] = useState(\"\");\n  const [OtpDB, setOtpDB] = useState(\"\");\n  \n  const navigate = useNavigate();\n\n\n  const getOtp = async (e) => {\n    e.preventDefault();\n    console.log(number);\n    setError(\"\");\n    if (number === \"\" || number === undefined)\n      return setError(\"Please enter a valid phone number!\");\n    try {\n      const response = await setUpRecaptha(number);\n      setResult(response);\n      setFlag(true);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const verifyOtp = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    if (otp === \"\" || otp === null) return;\n    try {\n      await result.confirm(otp);\n      addRecordNumberToDb(otp)\n      navigate(\"/home\");\n      \n\n      localStorage.setItem(\"localStoragePhone\", JSON.stringify(number));\n      localStorage.setItem(\"localStorageOtp\", JSON.stringify(otp));\n\n\n      NumberAndCode[number] = otp \n      console.log('Записанный в бд номер водителя и его код',NumberAndCode)\n\n    } catch (err) {\n      setError(err.message);\n    }\n    \n  };\n  const NumberAndCode = {}\n\n\n\n\n\n\n\n\n  const phoneSignIn = async (e) => {\n    e.preventDefault();\n    console.log('Я внутри phoneSIGNIN')\n    console.log('otp number',NumbersDB)\n    console.log('otp code',OtpDB)\n\n    \n    // console.log('NumberAndCode number',NumberAndCode)\n    // console.log('NumberAndCode code',NumberAndCode)\n  \n    setError(\"\");\n\n    const n=localStorage.getItem('localStoragePhone')\n    const nn = JSON.parse(n);\n    const c=localStorage.getItem('localStorageOtp')\n    const cc = JSON.parse(c);\n    \n    console.log('localStoragePhone number',nn)\n    console.log('localStorageOtp code',cc)\n\n    if (nn === \"\" || nn === null) return;\n    \n    try {\n      const isEqual = (nn===NumbersDB & cc===OtpDB);\n      console.log(' isEqual ',isEqual)\n        if (isEqual==1) {\n          // const response = await setUpRecaptha(NumbersDB);\n          // setResult(response);\n          // setFlag(true);\n          // await result.confirm(OtpDB);\n          // addRecordNumberToDb(OtpDB)\n          navigate(\"/home\")\n          console.log('Отработался вход по сохраненным логину и паролю')\n        }\n        else{\n        return ;\n        }\n\n      // if(NumberAndCode.key===NumbersDB and NumberAndCode.value===OtpDB) \n      // {\n      // const response = await setUpRecaptha(NumbersDB);\n      // setResult(response);\n      // setFlag(true);\n      // await result.confirm(OtpDB);\n      // addRecordNumberToDb(OtpDB)\n      // navigate(\"/home\");\n      // }\n      // else{}\n  \n    \n    \n    } catch (err) {\n      setError(err.message);\n    }\n    \n\n    // setError(\"\");\n    // if (otp === \"\" || otp === null) return;\n    // try {\n    //   await result.confirm(otp);\n    //   addRecordNumberToDb(otp)\n    //   navigate(\"/home\");\n    // } catch (err) {\n    //   setError(err.message);\n    // }  \n  }\n\n  const addRecordNumberToDb = (props,otp) =>{\n    \n    console.log('Я внутри addRecordNumberToDb ')\n    // setNumbersDB(number)\n    \n    \n\n   \n  }\n\n\n\n  // var val = Math.floor(1000 + Math.random() * 9000);\n  // console.log('рандомайз выдал',val);\n\n  let NumbersDBB=''\n  \n\n \n  return (\n    <>\n      <div className=\"p-4 box\">\n        <h2 className=\"mb-3\">Firebase Phone Auth</h2>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <Form onSubmit={getOtp} style={{ display: !flag ? \"block\" : \"none\" }}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <PhoneInput\n              defaultCountry=\"IN\"\n              value={number}\n              onChange={setNumber}\n              placeholder=\"Enter Phone Number\"\n            />\n            <div id=\"recaptcha-container\"></div>\n          </Form.Group>\n          <div className=\"button-right\">\n            <Link to=\"/\">\n              <Button variant=\"secondary\">Cancel</Button>\n            </Link>\n            &nbsp;\n            <Button type=\"submit\" variant=\"primary\">\n              Send Otp\n            </Button>\n          </div>\n        </Form>\n\n\n        <Form onSubmit={verifyOtp} style={{ display: flag ? \"block\" : \"none\" }}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicOtp\">\n            <Form.Control\n              type=\"otp\"\n              placeholder=\"Enter OTP\"\n              onChange={(e) => setOtp(e.target.value)}\n\n\n            />\n          </Form.Group>\n\n          <div className=\"button-right\">\n            <Link to=\"/\">\n              <Button variant=\"secondary\">Cancel</Button>\n            </Link>\n            &nbsp;\n            <h3>Ваш код {NumberAndCode.value}</h3>\n            <Button type=\"submit\" variant=\"primary\" >\n              Verify\n            </Button>\n          </div>\n        </Form>\n        \n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        \n        <h4> SignIN </h4>\n        <h5>Войти в систему с имеющимся кодом</h5>\n       \n       \n      \n       \n       \n       <Form onSubmit={phoneSignIn} >\n      \n       <Form.Group className=\"mb-3\" controlId=\"sfsdfgd\">\n            <PhoneInput\n              defaultCountry=\"IN\"\n              value={NumbersDB}\n              onChange={setNumbersDB}\n              placeholder=\"Enter Phone Number\"\n            />\n            <div id=\"recaptcha-container\"></div>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicOtp\">\n            <Form.Control\n              type=\"otp\"\n              placeholder=\"Enter your OTP code \"\n              \n              \n              onChange={(e) => setOtpDB(e.target.value)}\n\n            />\n          </Form.Group>\n\n          <div className=\"button-right\">\n            <Link to=\"/\">\n              <Button variant=\"secondary\">Cancel</Button>\n            </Link>\n            &nbsp;\n            {/* <h3>Ваш код {NumbersDB}</h3>\n            <h3>Ваш код {OtpDB}</h3> */}\n            <br/>\n           \n            <Button type=\"submit\" variant=\"primary\" >\n              PUSH\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default PhoneSignUp;\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\nconst ProtectedRoute = ({ children }) => {\n  const { user } = useUserAuth();\n  if (!user) {\n    return <Navigate to=\"/\" />;\n  }\n  return children;\n};\n\nexport default ProtectedRoute;\n","import { db } from \"../../firebase\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport AddBook from \"../buisnessLogic/AddBook\";\n\nconst bookCollectionRef = collection(db, \"doctorsList\");\n\nclass BookDataService {\n  addBooks = (newBook) => {\n    console.log('Сработал ADD DOCTOR SERVICE  this is newBook',newBook)\n    return addDoc(bookCollectionRef, newBook);\n  };\n\n  updateBook = (id, updatedBook) => {\n    console.log('im in Doctor services id=',id,'updatedDoctor',updatedBook)\n    \n    const bookDoc = doc(db, \"doctorsList\", id);\n    return updateDoc(bookDoc, updatedBook);\n  };\n\n  \n\n  deleteBook = (id) => {\n    const bookDoc = doc(db, \"doctorsList\", id);\n    return deleteDoc(bookDoc);\n  };\n\n  getAllBooks = () => {\n    return getDocs(bookCollectionRef);\n  };\n\n  getBook = (id) => {\n    const bookDoc = doc(db, \"doctorsList\", id);\n    return getDoc(bookDoc);\n  };\n}\n\nexport default new BookDataService();\n","import './modal.css'\n\nfunction Modal({open, modalLable, children, custom_modal, onClose}) {\n\n  const handleClose = (e) => {\n    if(e.target.className === 'modalContainer'){\n      onClose()\n    }\n    return null\n  }\n\n  if(open) {\n    return (\n      <div className='modalContainer' onClick={handleClose}>\n        <div className= {`modal ${custom_modal}`}>\n          <div className='modal__head'>\n            <h2>{modalLable}</h2>\n            <span className='modal__close' onClick={onClose}>x</span>\n          </div>\n          {children}\n        </div>\n      </div>\n    )\n  }\n  return null\n}\n\nexport default Modal\n","import React, {useState, useEffect, useRef} from \"react\";\nimport {\n    Form,\n    Alert,\n    InputGroup,\n    Button,\n    ButtonGroup\n} from \"react-bootstrap\";\nimport BookDataService from \"../services/book.services\";\nimport '../modal/addTask.css'\nimport Modal from \"../modal/Modal\";\nimport DoctorsList from \"./DoctorsList\";\n\nconst AddBook = ({ id,setBookId,onClose, open}) => {\n\n    \n    const [title, setTitle] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n    const [status, setStatus] = useState(\"Available\");\n    const [flag, setFlag] = useState(true);\n    const [message, setMessage] = useState({error: false, msg: \"\"});\n    const [Name, setName] = useState(\"\")\n    const [Age, setAge] = useState('');\n    const [LastName, setLastName] = useState('');\n\n    const [Phone, setPhone] = useState('');\n    const [Schedule, setSchedule] = useState('');\n    const [Specialization, setSpecialization] = useState('');\n    \n\n    console.log('IM iN ADDBOOK id in this', id)\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setMessage(\"\");\n        if (Name === \"\" || LastName === \"\") {\n            setMessage({error: true, msg: \"Заполните Имя и Фамилию\"});\n            return;\n        }\n        const newBook = {\n            \n            status,\n            Name,\n            Age,\n            LastName,\n            Phone,\n            Schedule,\n            Specialization\n\n        };\n        console.log('this is newBook from Addbook',newBook);\n\n        try {\n            console.log('Im in AddBook  id=  ',id)\n            console.log('e target ',e.target.getBookId)\n            if (id !== undefined && id !== \"\") {\n                console.log('FUNCTION UPDATE STARTED')\n                await BookDataService.updateBook(id, newBook);\n                setBookId(\"\");\n                \n                setName(\"\");\n                setAge(\"\");\n                setLastName(\"\");\n                setPhone(\"\");\n                setSchedule(\"\");\n                setSpecialization(\"\");\n                setMessage({error: false, msg: \"Updated successfully!\"});\n            } else {\n                await BookDataService.addBooks(newBook);\n                setMessage({error: false, msg: \"New Book added successfully!\"});\n            }\n        } catch (err) {\n            setMessage({error: true, msg: err.message});\n        }\n\n        setTitle(\"\");\n        setAuthor(\"\");\n        setName(\"\");\n        setAge(\"\");\n        setLastName(\"\");\n        setPhone(\"\");\n        setSchedule(\"\");\n        setSpecialization(\"\");\n    };\n\n    const editHandler = async () => {\n        setMessage(\"\");\n        try {\n            const docSnap = await BookDataService.getBook(id);\n            console.log(\"the record is :\", docSnap.data());\n            setTitle(docSnap.data().title);\n            setAuthor(docSnap.data().author);\n            setStatus(docSnap.data().status);\n            setName(docSnap.data().name);\n            setAge(docSnap.data().Age);\n            setLastName(docSnap.data().LastName);\n            setPhone(docSnap.data().Phone);\n            setSchedule(docSnap.data().Schedule);\n            setSpecialization(docSnap.data().Specialization);\n\n        } catch (err) {\n            setMessage({error: true, msg: err.message});\n        }\n    };\n\n    useEffect(() => {\n        console.log(\"The id here is : \", id);\n        if (id !== undefined && id !== \"\") {\n            editHandler();\n        }\n    }, [id]);\n\n    return (\n        <>\n         <Modal modalLable='Add Task' onClose={onClose} open={open}>\n   \n            <div className=\"p-4 box\">\n                {\n                message ?. msg && (\n                    <Alert variant={\n                            message ?. error ? \"danger\" : \"success\"\n                        }\n                        dismissible\n                        onClose={\n                            () => setMessage(\"\")\n                    }>\n                        {\n                        message ?. msg\n                    } </Alert>\n                )\n            }\n\n                <Form onSubmit={handleSubmit}>\n                    {/* <Form.Group className=\"mb-3\" controlId=\"formBookTitle\">\n            <InputGroup>\n              <InputGroup.Text id=\"formBookTitle\">B</InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Book Title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBookAuthor\">\n            <InputGroup>\n              <InputGroup.Text id=\"formBookAuthor\">A</InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Book Author\"\n                value={author}\n                onChange={(e) => setAuthor(e.target.value)}\n              />\n            </InputGroup>\n\n\n          </Form.Group> */}\n\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBookName\">\n                        <InputGroup>\n                            <InputGroup.Text id=\"formBookName\">set Name</InputGroup.Text>\n                            <Form.Control type=\"text\" placeholder=\"Name\"\n                                value={Name}\n                                onChange={\n                                    (e) => setName(e.target.value)\n                                }/>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBookAuthor\">\n                        <InputGroup>\n                            <InputGroup.Text id=\"formBookAuthor\">Last name</InputGroup.Text>\n                            <Form.Control type=\"text\" placeholder=\"last name\"\n                                value={LastName}\n                                onChange={\n                                    (e) => setLastName(e.target.value)\n                                }/>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"\">\n                        <InputGroup>\n                            <InputGroup.Text id=\"formBookAuthor\">Phone</InputGroup.Text>\n                            <Form.Control type=\"text\" placeholder=\"Phone\"\n                                value={Phone}\n                                onChange={\n                                    (e) => setPhone(e.target.value)\n                                }/>\n                        </InputGroup>\n                    </Form.Group>\n\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBookName\">\n                        <InputGroup>\n                            <InputGroup.Text id=\"formBookName\">set Age</InputGroup.Text>\n                            <Form.Control type=\"text\" placeholder=\"Name\"\n                                value={Age}\n                                onChange={\n                                    (e) => setAge(e.target.value)\n                                }/>\n                        </InputGroup>\n                    </Form.Group>\n\n\n                  \n                    <Form.Group className=\"mb-3\" controlId=\"formBookAuthor\">\n                        <InputGroup>\n                            <InputGroup.Text id=\"formBookAuthor\">Specialization</InputGroup.Text>\n                            <Form.Control type=\"text\" placeholder=\"Specialization\"\n                                value={Specialization}\n                                onChange={\n                                    (e) => setSpecialization(e.target.value)\n                                }/>\n                        </InputGroup>\n\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBookAuthor\">\n                        <InputGroup>\n                            <InputGroup.Text id=\"formBookAuthor\">Schedule</InputGroup.Text>\n                            <Form.Control type=\"text\" placeholder=\"Schedule\"\n                                value={Schedule}\n                                onChange={\n                                    (e) => setSchedule(e.target.value)\n                                }/>\n                        </InputGroup>\n\n                    </Form.Group>\n\n                   \n\n\n                    <ButtonGroup aria-label=\"Basic example\" className=\"mb-3\">\n                        <Button disabled={flag}\n                            variant=\"success\"\n                            onClick={\n                                (e) => {\n                                    setStatus(\"Available\");\n                                    setFlag(true);\n                                }\n                        }>\n                            Available\n                        </Button>\n\n                        <Button variant=\"danger\"\n                            disabled={\n                                !flag\n                            }\n                            onClick={\n                                (e) => {\n                                    setStatus(\"Not Available\");\n                                    setFlag(false);\n                                }\n                        }>\n                            Not Available\n                        </Button>\n                    </ButtonGroup>\n                    <div className=\"d-grid gap-2\">\n                        <Button variant=\"primary\" type=\"Submit\">\n                            Add/ Update\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default AddBook;\n\n","import { db } from \"../../firebase\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nconst managersCollectionRef = collection(db, \"users\");\nconst bookCollectionRef = collection(db, \"pacients\");\nconst bookCollectionRefDoctors = collection(db, \"doctorsList\");\n\nclass PacientDataService {\n  addBooks = (newBook) => {\n    return addDoc(bookCollectionRef, newBook);\n  };\n\n  updateBook = (id, updatedBook) => {\n    const bookDoc = doc(db, \"pacients\", id);\n    return updateDoc(bookDoc, updatedBook);\n  };\n\n  deleteBook = (id) => {\n    const bookDoc = doc(db, \"pacients\", id);\n    return deleteDoc(bookDoc);\n  };\n\n  getAllBooks = () => {\n    return getDocs(bookCollectionRef);\n  };\n  getAllM = () => {\n    return getDocs(managersCollectionRef);\n  };\n  \n  getAllDcotors = () => {\n    return getDocs(bookCollectionRefDoctors);\n  };\n\n  getBook = (id) => {\n    const bookDoc = doc(db, \"pacients\", id);\n    return getDoc(bookDoc);\n  };\n}\n\nexport default new PacientDataService();\n","import React, {useState, useEffect, useRef} from \"react\";\nimport {\n    Form,\n    Alert,\n    InputGroup,\n    Button,\n    ButtonGroup\n} from \"react-bootstrap\";\nimport BookDataService from '../services/book.services'\nimport '../modal/addTask.css'\nimport Modal from \"../modal/Modal\";\nimport DoctorsList from \"./DoctorsList\";\nimport pacientServices from \"../services/pacient.services\";\n\n\nconst AddPacient = ({ id,setBookId,onClose, open}) => {\n\n    const [doctors, setDoctors] = useState([]);\n    \n    const [status, setStatus] = useState(\"Available\");\n    const [flag, setFlag] = useState(true);\n    const [message, setMessage] = useState({error: false, msg: \"\"});\n    const [Name, setName] = useState(\"\")\n    const [Age, setAge] = useState('');\n    const [LastName, setLastName] = useState('');\n\n    const [Phone, setPhone] = useState('');\n    const [zayavka,setZayavka]= useState('null');\n   \n    const [zayavkaTime,setZayavkaTime]=useState('null')\n\n    \n\n    console.log('IM iN ADDBOOK id in this', id)\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setMessage(\"\");\n        if (Name === \"\" || LastName === \"\") {\n            setMessage({error: true, msg: \"Заполните Имя и Фамилию\"});\n            return;\n        }\n        const newBook = {\n            \n            status,\n            Name,\n            Age,\n            LastName,\n            Phone,\n            zayavka,\n            zayavkaTime\n\n        };\n        console.log('this is newBook from Addbook',newBook);\n\n        try {\n            console.log('Im in AddBook  id=  ',id)\n            console.log('e target ',e.target.getBookId)\n            if (id !== undefined && id !== \"\") {\n                console.log('FUNCTION UPDATE STARTED')\n                await pacientServices.updateBook(id, newBook);\n                setBookId(\"\");\n                setStatus('')\n                setName(\"\");\n                setAge(\"\");\n                setLastName(\"\");\n                setPhone(\"\");\n                setZayavka(\"\");\n                setZayavkaTime(\"\");\n                setMessage({error: false, msg: \"Updated successfully!\"});\n            } else {\n                await pacientServices.addBooks(newBook);\n                setMessage({error: false, msg: \"New Book added successfully!\"});\n            }\n        } catch (err) {\n            setMessage({error: true, msg: err.message});\n        }\n\n        // setTitle(\"\");\n        // setAuthor(\"\");\n        // setName(\"\");\n        setStatus('');\n        setAge(\"\");\n        setLastName(\"\");\n        setPhone(\"\");\n        setZayavka(\"\");\n        setZayavkaTime(\"\");\n    };\n\n    const editHandler = async () => {\n        setMessage(\"\");\n        try {\n            const docSnap = await pacientServices.getBook(id);\n            console.log(\"the record is :\", docSnap.data());\n          \n            setStatus(docSnap.data().status);\n            setName(docSnap.data().Name);\n            setAge(docSnap.data().Age);\n            setLastName(docSnap.data().LastName);\n            setPhone(docSnap.data().Phone);\n            setZayavka(docSnap.data().zayavka)\n            setZayavkaTime(docSnap.data().zayavkaTime)\n\n        } catch (err) {\n            setMessage({error: true, msg: err.message});\n        }\n    };\n\n    function handleChange(e){\n        \n        console.log('iam in function handle Change  e target=  ',e.target.value); // for ex. will print USD\n        // const form = e.target;\n        // const formData = new FormData(form);\n        // const formJson = Object.fromEntries(formData.entries());\n        // console.log(' formJson= ',formJson)\n        \n        setZayavka(e.target.value) \n   \n    }\n    \n    function handleChange2(e){\n        \n        console.log('iam in function handle Change2  e target=  ',e.target.value); // for ex. will print USD\n        // const form = e.target;\n        // const formData = new FormData(form);\n        // const formJson = Object.fromEntries(formData.entries());\n        // console.log(' formJson= ',formJson)\n        \n        setZayavkaTime(e.target.value)\n\n    }\n\n    const getDoctors = async () => {\n        const data = await BookDataService.getAllBooks()\n        console.log('ALL DOCTORS',data.docs);\n        setDoctors(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n      };\n  \n\n\n    useEffect(() => {\n        console.log(\"The id here is : \", id);\n        if (id !== undefined && id !== \"\") {\n            getDoctors();\n            editHandler();\n           \n        }\n    }, [id]);\n\n    return (\n        <>\n   \n         \n   \n            <div className=\"p-4 box\">\n                {\n                message ?. msg && (\n                    <Alert variant={\n                            message ?. error ? \"danger\" : \"success\"\n                        }\n                        dismissible\n                        onClose={\n                            () => setMessage(\"\")\n                    }>\n                        {\n                        message ?. msg\n                    } </Alert>\n                )\n            }\n\n                <Form onSubmit={handleSubmit}>\n                {doctors.map((doc, index) => {\n                                console.log('doc name=',doc.name)\n                                return (\n                                    <li value={doc.id} key={index}>\n                                    Имя:{doc.Name}\n                                    Фамилия:{doc.LastName} \n                                    {/* {doc.Age}\n                                    {doc.Phone}\n                                    {doc.Schedule} */}\n                                    Специализация:{doc.Specialization}\n                                    {/* Статус:{doc.status} */}\n                                  \n                                </li>\n                                );\n                            })}\n                    {/* <Form.Group className=\"mb-3\" controlId=\"formBookTitle\">\n            <InputGroup>\n              <InputGroup.Text id=\"formBookTitle\">B</InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Book Title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </InputGroup>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBookAuthor\">\n            <InputGroup>\n              <InputGroup.Text id=\"formBookAuthor\">A</InputGroup.Text>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Book Author\"\n                value={author}\n                onChange={(e) => setAuthor(e.target.value)}\n              />\n            </InputGroup>\n\n\n          </Form.Group> */}\n\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBookName\">\n                        <InputGroup>\n                            <InputGroup.Text id=\"formBookName\">set Name</InputGroup.Text>\n                            <Form.Control type=\"text\" placeholder=\"Name\"\n                                value={Name}\n                                onChange={\n                                    (e) => setName(e.target.value)\n                                }/>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBookAuthor\">\n                        <InputGroup>\n                            <InputGroup.Text id=\"formBookAuthor2\">Last name</InputGroup.Text>\n                            <Form.Control type=\"text\" placeholder=\"last name\"\n                                value={LastName}\n                                onChange={\n                                    (e) => setLastName(e.target.value)\n                                }/>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"\">\n                        <InputGroup>\n                            <InputGroup.Text id=\"formBookAuthor3\">Phone</InputGroup.Text>\n                            <Form.Control type=\"text\" placeholder=\"Phone\"\n                                value={Phone}\n                                onChange={\n                                    (e) => setPhone(e.target.value)\n                                }/>\n                        </InputGroup>\n                    </Form.Group>\n\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBookName\">\n                        <InputGroup>\n                            <InputGroup.Text id=\"formBookName4\">set Age</InputGroup.Text>\n                            <Form.Control type=\"text\" placeholder=\"Name\"\n                                value={Age}\n                                onChange={\n                                    (e) => setAge(e.target.value)\n                                }/>\n                        </InputGroup>\n                    </Form.Group>\n                    \n                    <label>\n                        Выберите врача:\n                        <select name=\"selectedFruit\" defaultValue=\"orange\" onChange={handleChange} key='index'>\n                        <option value=\"apple\">Apple</option>\n                        <option value=\"banana\">Banana</option>\n                        <option value=\"orange\">Orange</option>\n                       \n                            {doctors.map((doc, index) => {\n                                console.log('doc name=',doc.name)\n                                return (\n                                    <option value={doc.id} key={index}>\n                                    Имя:{doc.Name}\n                                    Фамилия:{doc.LastName} \n                                    {/* {doc.Age}\n                                    {doc.Phone}\n                                    {doc.Schedule} */}\n                                    Специализация:{doc.Specialization}\n                                    {/* Статус:{doc.status} */}\n                                  \n                                </option>\n                                );\n                            })}\n                        \n                        </select>\n                    </label>\n\n\n                    <label>\n                        Выберите Предпочитаемое время:\n                        <select name=\"selectedFruit2\" defaultValue=\"Выберите время\" onChange={handleChange2}>\n                        <option value=\"10:00-10:30\">10:00-10:30</option>\n                        <option value=\"10:30-11:00\">10:30-11:00</option>\n                        <option value=\"11:30-12:00\">11:30-12:00</option>\n                       \n                           \n                        \n                        </select>\n                    </label>\n\n                  \n\n\n               \n\n                    <ButtonGroup aria-label=\"Basic example\" className=\"mb-3\">\n                        <Button disabled={flag}\n                            variant=\"success\"\n                            onClick={\n                                (e) => {\n                                    setStatus(\"Available\");\n                                    setFlag(true);\n                                }\n                        }>\n                            Available\n                        </Button>\n\n                        <Button variant=\"danger\"\n                            disabled={\n                                !flag\n                            }\n                            onClick={\n                                (e) => {\n                                    setStatus(\"Not Available\");\n                                    setFlag(false);\n                                }\n                        }>\n                            Not Available\n                        </Button>\n                    </ButtonGroup>\n                    <div className=\"d-grid gap-2\">\n                        <Button variant=\"primary\" type=\"Submit\">\n                            Add/ Update\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n           \n        </>\n    );\n};\n\nexport default AddPacient;\n\n","import React, {useEffect, useState} from \"react\";\nimport {Table, Button} from \"react-bootstrap\";\nimport PacientDataService from \"../services/pacient.services\";\nimport AddBook from \"./AddBook\";\nimport { db } from \"../../firebase\";\nimport {collection, query, orderBy, onSnapshot, updateDoc,getDoc} from \"firebase/firestore\"\nimport {useParams} from 'react-router-dom'\nimport AddPacient from \"./AddPacient\";\nimport BookDataService from \"../services/book.services\";\nimport {Routes, Route, Outlet, NavLink} from 'react-router-dom';\nimport {\n    Form,\n    Alert,\n    InputGroup,\n    Dropdown ,\n    ButtonGroup\n} from \"react-bootstrap\";\nimport {\n    doc,\n  } from \"firebase/firestore\";\n  import { auth } from \"../../firebase\"; // Assuming you have the Firebase auth instance available\n\nconst PacientsList = ({getBookId,id}) => {\n    const [flag, setFlag] = useState(true);\n    const [message, setMessage] = useState({error: false, msg: \"\"});\n    const [books, setBooks] = useState([]);\n    const [bookId, setBookId] = useState();\n    const [status, setStatus] = useState(\"InProgress\");\n    const [openAddModal, setOpenAddModal] = useState(false)\n    const [doctors, setDoctors] = useState([]);\n    const [managers, setManagers] = useState([]);\n    const [selectedStatus, setSelectedStatus] = useState(\"All\");\n    const [usr,setUsr] = useState('');\n    const [usrNAME,setUsrNAME] = useState('');\n    const [timestamp, setTimestamp] = useState(null);\n    \n    // useEffect(() => {\n    //     getBooks();\n    //     getDoctors();\n    //     updateStatus()\n    // }, []);\n    const getCurrentUserId = () => {\n        const user = auth.currentUser;\n        console.log('this is user= ',user)\n        if (user) {\n          const userId = user.uid;\n          setUsr(userId);\n          setUsrNAME(user)\n          console.log(\"User UID====\", userId);\n          return userId;\n        } else {\n          console.log(\"No user is currently signed in.\");\n          return null;\n        }\n      };\n\n    useEffect(() => {\n        getAllm()\n        getBooks();\n        getCurrentUserId();\n       \n    }, []);\n\n    // useEffect(() => {\n    //   const taskColRef = query(collection(db, 'doctorsList'))\n    //   onSnapshot(taskColRef, (snapshot) => {\n    //     getBooks(snapshot.docs.map(doc => ({\n    //       id: doc.id,\n    //       data: doc.data()\n    //     })))})\n    // },[])\n    const getBookIdHandler = (getBookId) => {\n        console.log(\"The ID of document to be edited: \", getBookId);\n        setBookId(getBookId);\n    };\n\n    const getDoctors = async (id) => {\n        const dataDoctors = await BookDataService.getAllBooks();\n        console.log(dataDoctors.docs);\n        setDoctors(dataDoctors.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id\n        })));\n    };\n\n\n    \n   \n    const getBooks = async (id) => {\n        const data = await PacientDataService.getAllBooks();\n        console.log('QUERY to db  ',data.docs);\n        setBooks(data.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id\n        })));\n\n    };\n\n   \n    const getAllm=async()=>{\n        const da= await PacientDataService.getAllM();\n        console.log('2',da)\n        setManagers(da.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id\n        })));\n        console.log(managers)\n    }\n\n  \n    const deleteHandler = async (id) => {\n        const bookRef = doc(db, \"pacients\", id);\n        const bookSnapshot = await getDoc(bookRef);\n        const bookData = bookSnapshot.data();\n\n        console.log('bootData.manager= ',bookData.manager,'THIS IS USER= ',THISUSER)\n        console.log()\n        if(bookData.manager==THISUSER){\n        await PacientDataService.deleteBook(id);\n        getBooks();\n    }\n    else{\n        alert('Вы не можете удалить данную заявку!')\n      }\n    };\n\n    const updateStatus = async (id, newStatus) => {\n        try {\n\n          const bookRef = doc(db, \"pacients\", id); // Replace \"your-collection-name\" with the actual collection name\n          const bookSnapshot = await getDoc(bookRef);\n          const bookData = bookSnapshot.data();\n\n          console.log('bootData.manager= ',bookData.manager,'THIS IS USER= ',THISUSER)\n          console.log()\n          if(bookData.manager==THISUSER){\n\n          await updateDoc(bookRef, { status: newStatus });\n          getBooks();}\n          else{\n            alert('Вы не обрабатываете данную заявку!')\n          }\n        } catch (err) {\n          setMessage({ error: true, msg: err.message });\n        }\n      };\n\n\n      const managedBy = async (id, THISUSER) => {\n       \n        \n\n        try {\n          const bookRef = doc(db, \"pacients\", id); // Replace \"your-collection-name\" with the actual collection name\n          console.log('this is bookRef',bookRef)\n          \n            const bookSnapshot = await getDoc(bookRef);\n            const bookData = bookSnapshot.data();\n\n            if (bookData && !bookData.manager) {\n            await updateDoc(bookRef, { manager: THISUSER });\n            getBooks();\n            } else {\n                console.log('The manager field is already populated or the document does not exist.');\n                alert('Данная запись уже отрабатывается менеджером.Поэтому ее нельзя выбрать')\n            }\n\n     \n        \n        } catch (err) {\n          setMessage({ error: true, msg: err.message });\n        }\n      };\n\n      const handleStatusFilter = (status) => {\n        setSelectedStatus(status);\n      };\n\n    \n      const filteredBooks = selectedStatus === \"All\" ? books : books.filter((book) => book.status === selectedStatus);\n    \n      const statusOptions = [\"All\", \"inProgress\", \"finished\"];\n     \n      let THISUSER=''\n      for(let i=0 ;i<managers.length;i++){\n        console.log('this is user=',usr)\n        \n\n        if(usr==managers[i].uid){\n            THISUSER=managers[i].firstName\n        }\n    }\n    console.log('THIS USER=',THISUSER)\n\n  \n\n   \n\n    return (<> \n    {/* {    openAddModal && \n        <AddPacient id={bookId}\n                 setBookId={setBookId}\n                 onClose={ () => setOpenAddModal(false)}\n                 open={openAddModal}\n                 />\n   } */}\n\n\n            {/* <NavLink to=\"/buisnessLogic/AddPacient\">\n                    Add pacient\n            </NavLink> */}\n\n          <div className=\"mb-2\">\n          <h6>Здравствуйте, {THISUSER} </h6>\n          </div>\n          <br />\n        <div className=\"mb-2\">\n            <Button variant=\"\" className=\"btn-primary\"\n                onClick={getBooks}>\n                Обновить заявки\n            </Button>\n           \n        </div>\n\n        {/* <pre>{JSON.stringify(books, undefined, 2)}</pre>} */}\n        <Table striped bordered hover size=\"sm\">\n            <thead>\n                <tr> \n                    <th>Действие</th>\n                    <th>Менеджер</th>\n                    <th>Название компании</th>\n                    <th>БИН компании</th>\n                    <th>ФИО </th>\n                    <th>Наименование обьекта</th>\n                    <th>Срок строительства</th>\n                    <th>Телефон</th>\n                    <th>Время заявки</th>\n                    <th>\n                    <Dropdown>\n                <Dropdown.Toggle variant=\"primary\" id=\"statusFilterDropdown\" className=\"btn btn-secondary dropdown-toggle\">\n                  Статус: {selectedStatus}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {statusOptions.map((option) => (\n                    <Dropdown.Item\n                      key={option}\n                      onClick={() => handleStatusFilter(option)}\n                    >\n                      {option}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n                     </th>\n\n                    <th>Редактировать запись</th>\n                </tr>\n            </thead>\n            <tbody>\n                 {\n                filteredBooks.map((doc, index) => {\n                    return (\n                        <tr key={\n                            doc.id\n                        }>\n                            {/* <td>{index + 1}</td>\n                <td>{doc.title}</td>\n                <td>{doc.author}</td>\n                <td>{doc.status}</td> */}\n                            {/* <td key={index}>{\n                                doc.Name\n                            }</td> */}\n                            <td>\n                              \n                                {<Button \n                                    className=\"btn-primary\"\n                                    size=\"sm\"\n                                    disabled={false}\n                                    variant=\"\"\n                                    onClick={() => {\n                                    managedBy(doc.id,THISUSER);\n                                    \n                                    }}\n                                >\n                              Выбрать заявку\n                               </Button>\n                                }\n                            </td>\n                            <td>{\n                                doc.manager\n                            }</td>\n                            <td>{\n                                doc.companyName\n                            }</td>\n                            <td>{\n                                doc.companyBin\n                            }</td>\n                            <td>{\n                                doc.fio\n                            }</td>\n                            <td>{\n                                doc.objectName\n                            }</td>\n                            <td>{doc.srokStroitelstva}</td>\n                            <td>{\n                                doc.phone\n                            }</td>\n                            <td>{\n                                 doc.zayavkaTime.toDate().toLocaleString()\n                                \n                            }</td>\n                            <td>{\n                                doc.status\n                            }</td>\n                            <td>\n                            <ButtonGroup aria-label=\"Basic example\" className=\"mb-3\">\n                  <Button size=\"sm\"\n                    disabled={false}\n                    variant=\"success\"\n                    onClick={() => {\n                      updateStatus(doc.id, \"inProgress\");\n                      setStatus(\"inProgress\");\n                      setFlag(true);\n                    }}\n                  >\n                    В работе\n                  </Button>\n                  <Button size=\"sm\"\n                    variant=\"danger\"\n                    disabled={false}\n                    onClick={() => {\n                      updateStatus(doc.id, \"finished\");\n                      setStatus(\"finished\");\n                      setFlag(false);\n                    }}\n                  >\n                    Завершено\n                  </Button>\n                  {/* <Button variant=\"danger\" className=\"delete\" size=\"sm\"\n                                    onClick={\n                                        (e) => deleteHandler(doc.id)\n                                }>\n                                    Delete\n                                </Button> */}\n                </ButtonGroup>\n\n                              \n                            </td>\n                        </tr>\n                    );\n                })\n            } </tbody>\n        </Table>\n    </>\n    );\n    };\n    \n    export default PacientsList;\n\n","import React, {useState} from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport {useNavigate} from \"react-router\";\nimport {useUserAuth} from \"../../context/UserAuthContext\";\nimport {Container, Navbar, Row, Col} from \"react-bootstrap\";\n// import '../modal/taskManager.css'\n\nimport {\n    collection,\n    doc,\n    setDoc,\n    addDoc,\n    updateDoc,\n    deleteDoc,\n    getDoc,\n    getDocs,\n    where,\n    query\n} from \"firebase/firestore\";\nimport {db} from '../../firebase';\nimport {Routes, Route, Outlet, NavLink} from 'react-router-dom';\nimport AddBook from \"./AddBook\";\nimport PacientDataService  from '../services/pacient.services' \nimport BooksList from './BooksList'\nimport PacientsList from \"./PacientsList\";\nimport AddPacient from \"./AddPacient\";\n\nconst DoctorsList = () => {\n    const [openAddModal, setOpenAddModal] = useState(false)\n    const [bookId, setBookId] = useState(\"\");\n\n    const getBookIdHandler = (id) => {\n        console.log(\"The ID of document to be edited: \", id);\n        setBookId(id);\n    };\n\n\n    const {logOut, user} = useUserAuth();\n    const navigate = useNavigate();\n    const handleLogout = async () => {\n        try {\n            await logOut();\n            navigate(\"/\");\n        } catch (error) {\n            console.log(error.message);\n        }\n    };\n \n    return (\n      \n        <>\n            <div className='taskManager__container'>\n                <button onClick={\n                    () => setOpenAddModal(true)}>\n                    Добавить Врача\n                </button>\n            </div>\n\n        {\n            openAddModal && <AddBook \n                id={bookId}\n                setBookId={setBookId}\n                onClose={\n                    () => setOpenAddModal(false)\n                }\n                open={openAddModal}/>\n                \n        } \n\n\n       \n            <Container>\n                  \n\n{/* \n                <Row>\n                    <Col>\n                        <BooksList getBookId={getBookIdHandler} id={bookId}\n        />\n                    </Col>\n                </Row> */}\n                </Container>\n\n                <br />\n                <br />\n                {/* <div className='taskManager__container'>\n                <button onClick={\n                    () => setOpenAddModal(true)}>\n                    Добавить Пациента\n                </button>\n            </div> */}\n\n        {\n            openAddModal && <AddPacient\n                id={bookId}\n                setBookId={setBookId}\n                onClose={\n                    () => setOpenAddModal(false)\n                }\n                open={openAddModal}/>\n                \n        } \n\n                <Container>\n                  \n\n\n                  <Row>\n                      <Col>\n                          <PacientsList getBookId={getBookIdHandler} id={bookId}\n          />\n                      </Col>\n                  </Row>\n                  </Container>\n                {/* <Container>\n                <Row>\n                <Col>\n                    <AddBook id={bookId} setBookId={setBookId} />\n                </Col>\n                </Row>\n            </Container> */}\n\n\n            {/* <DoctorsList/> */}\n\n\n            <div className=\"d-grid gap-2\">\n                <Button variant=\"primary\"\n                    onClick={handleLogout}>\n                    Log out\n                </Button>\n\n            </div>\n        </>\n    );\n\n\n};\n\nexport default DoctorsList;\n\n","import React, {useState,useEffect} from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport {useNavigate} from \"react-router\";\nimport {useUserAuth} from \"../../context/UserAuthContext\";\nimport { Container, Navbar, Row, Col } from \"react-bootstrap\";\n\nimport {\n    collection,\n    doc,\n    setDoc,\n    addDoc,\n    updateDoc,\n    deleteDoc,\n    getDoc,\n    getDocs,\n    where,\n    query\n} from \"firebase/firestore\";\nimport {db} from '../../firebase';\nimport {Routes, Route, Outlet, NavLink} from 'react-router-dom';\nimport DoctorsList from \"./DoctorsList\";\n\nimport AddBook from \"./AddBook\";\nimport bookServices from \"../services/book.services\";\nimport BooksList from './BooksList'\nimport AddPacient from \"./AddPacient\";\nimport PacientsList from \"./PacientsList\";\nimport { auth } from \"../../firebase\";\n\nconst Home = () => {\n    const [bookId, setBookId] = useState(\"\");\n    const { logOut, user } = useUserAuth();\n    const navigate = useNavigate();\n    const [username, setUsername] = useState(\"\");\n  \n    \n    const getBookIdHandler = (id) => {\n      console.log(\"The ID of document to be edited: \", id);\n      setBookId(id);\n    };\n\n\n  \n    const handleLogout = async () => {\n        try {\n            await logOut();\n            navigate(\"/\");\n        } catch (error) {\n            console.log(error.message);\n        }\n    };\n\n    // const uid = signedInUser.uid;\n    // console.log(uid)\n    \n    useEffect(() => {\n       \n      getCurrentUserId()\n      }, []);\n        \n      const getCurrentUserId = () => {\n        const user = auth.currentUser;\n        console.log('this is user= ',user)\n        if (user) {\n          const userId = user.uid;\n          \n          setUsername(user)\n          console.log(\"User UID====\", userId);\n          return userId;\n        } else {\n          console.log(\"No user is currently signed in.\");\n          return null;\n        }\n      };\n\n    return (\n\n        <>\n       \n\n            <nav>\n                <NavLink to=\"/Home\">\n                    \n                </NavLink>\n                <br />\n                {/* <NavLink to=\"/buisnessLogic/AddPacient\">\n                    Add pacient\n                </NavLink>\n                <br />\n              <NavLink to=\"/buisnessLogic/AddDoctor\">\n                    Add doctor\n                </NavLink> */}\n                <br />\n                {/*   <NavLink to=\"/buisnessLogic/DoctorsList\">\n                    Doctors List\n                </NavLink> */}\n               <PacientsList/>\n                {/* <NavLink to=\"/buisnessLogic/PacientsList\">\n                    Заявки\n                </NavLink> */}\n                <br />\n                {/* <NavLink to=\"/buisnessLogic/RegisterOrderList\">\n                    Register Order List\n                </NavLink>\n                <br />\n                <NavLink to=\"/buisnessLogic/AddRegisterOrder\">\n                    Create Register Order\n                </NavLink> */}\n                \n            </nav>\n\n        {/* <DoctorsList/> */}\n\n            <div className=\"p-4 box mt-3 text-center\">\n              \n                <br/> Ваш email: {\n                user && user.email\n            } </div>\n            <div className=\"d-grid gap-2\">\n                <Button variant=\"primary\"\n                    onClick={handleLogout}>\n                    Log out\n                </Button>\n\n            </div>\n        </>\n    );\n\n\n};\n\nexport default Home;\n\n","import React, {useState} from 'react';\nimport {useNavigate} from \"react-router\";\nimport {useUserAuth} from \"../../context/UserAuthContext\"\nimport {\n    collection,\n\n    setDoc,\n    addDoc,\n\n    deleteDoc,\n    getDoc,\n    getDocs,\n    where,\n    query,\n    Timestamp\n} from \"firebase/firestore\";\nimport {\n\n   \n    orderBy,\n    onSnapshot,\n    doc,\n    updateDoc,\n  } from \"firebase/firestore\";\nimport {db} from '../../firebase';\nimport {Routes, Route, Outlet, NavLink} from 'react-router-dom';\n\nfunction AddDoctor(props) {\n\n\n    const [Age, setAge] = useState('');\n    const [LastName, setLastName] = useState('');\n    const [Name, setName] = useState('');\n    const [Phone, setPhone] = useState('');\n    const [Schedule, setSchedule] = useState('');\n    const [Specialization, setSpecialization] = useState('');\n    const [tasks, setTasks] = useState([])\n\n    // function getAlldata() {\n    //     getDocs(collection(db, \"doctorsList\")).then(docSnap => {\n    //         let users = [];\n    //         docSnap.forEach((doc) => {\n    //             users.push({\n    //                 ...doc.data(),\n    //                 id: doc.id\n    //             })\n    //         });\n    //         console.log(\"Document data:\", users);\n    //     });\n    // }\n\n\n \n    const addTodo = async (e) => {\n        e.preventDefault();\n\n        try {\n            const docRef = await addDoc(collection(db, \"doctorsList\"), {\n                name: Name,\n                lname: LastName,\n                phone: Phone,\n                age: Age,\n                schedule: Schedule,\n                specialization: Specialization,\n                created: Timestamp.now()\n            });\n            console.log(\"Document written with ID: \", docRef.id);\n        } catch (e) {\n            console.error(\"Error adding document: \", e);\n        }\n    }\n\n\n    return (\n        <>\n\n            <div>\n                <input type=\"text\" placeholder=\"Name\"\n                    onChange={\n                        (e) => setName(e.target.value)\n                    }/>\n                <input type=\"text\" placeholder=\"LastName\"\n                    onChange={\n                        (e) => setLastName(e.target.value)\n                    }/>\n                <input type=\"text\" placeholder=\"Set your Age\"\n                    onChange={\n                        (e) => setAge(e.target.value)\n                    }/>\n                <input type=\"text\" placeholder=\"Phone?\"\n                    onChange={\n                        (e) => setPhone(e.target.value)\n                    }/>\n                <input type=\"text\" placeholder=\"Specialization\"\n                    onChange={\n                        (e) => setSpecialization(e.target.value)\n                    }/>\n\n\n            </div>\n\n            <div className=\"btn-container\">\n                <button type=\"submit\" className=\"btn\"\n                    onClick={addTodo}>\n                    Submit\n                </button>\n            </div>\n            \n\n            \n\n            <br/><br/>\n           \n\n        </>\n    )\n}\n\nexport default AddDoctor;\n\n\n// function getSepcificDataWithID() {\n//     getDoc(doc(db, \"users\", 'IMx2OXMCR0WD7upXNcKq')).then(docData => {\n\n//         if (docData.exists()) {\n//             console.log(docData.data());\n\n//             setName(docData.data().name);\n//             setPhone(docData.data().phone);\n//             setLastName(docData.data().lname);\n//             setAge(docData.data().age);\n//             setAddress(docData.data().address);\n\n//         } else {\n//             console.log('No such a data!');\n//         }\n\n//     }).catch((error) => {\n//         console.log(error);\n//     })\n// }\n\n// function update() {\n//     updateDoc(doc(db, \"pacients\"), {\n//       name: Name,\n//       phone: Phone,\n//       lname: LastName,\n//       age: Age,\n//       address: Address\n//     }).then(() => {\n//         console.log('data submitted');\n\n//     }).catch((error) => {\n//         console.log(error);\n//     });\n// }\n\n// function deleteData() {\n//     deleteDoc(doc(db, \"pacients\", 'LA'));\n// }\n\n\n\n// function getDataWithQuery() {\n//     getDocs(query(collection(db, \"users\"), where('email', '==', 'NewUser@gmail.com'))).then(docSnap => {\n//         let users = [];\n//         docSnap.forEach((doc) => {\n//             users.push({\n//                 ...doc.data(),\n//                 id: doc.id\n//             })\n//         });\n//         console.log(\"Document data:\", users[0].username);\n//     });\n// }\n\n","import React,{useState,useEffect}from 'react';\nimport {useNavigate} from \"react-router\";\nimport {useUserAuth} from \"../../context/UserAuthContext\";\nimport {\n    collection,\n    doc,\n    setDoc,\n    addDoc,\n    updateDoc,\n    deleteDoc,\n    getDoc,\n    getDocs,\n    where,\n    query,Timestamp\n} from \"firebase/firestore\";\nimport {db} from '../../firebase';\nimport BookDataService from \"../services/book.services\";\nimport {Button} from \"react-bootstrap\";\nimport { Routes, Route, Outlet, NavLink } from 'react-router-dom';\nimport pacientServices from '../services/pacient.services';\nimport Container from 'react-bootstrap';\nfunction AddRegisterOrder({getBookId}) {\n\n    const [Address, setAddress] = useState('');\n    const [Age, setAge] = useState('');\n    const [LastName, setLastName] = useState('');\n    const [Name, setName] = useState('');\n    const [Phone, setPhone] = useState('');\n\n    const [zayavka,setZayavka]= useState('');\n    const [message, setMessage] = useState('');\n    const [zayavkaTime,setZayavkaTime]=useState('')\n\n    const [books, setBooks] = useState([]);\n    const [pacient, setPacient] = useState([]);\n\n\n    const [status, setStatus] = useState(\"Available\");\n    const [flag, setFlag] = useState(true);\n    const [Vrachmessage, setVrachMessage] = useState({error: false, msg: \"\"});\n    const [VrachName, setVrachName] = useState(\"\")\n    const [VrachAge, VrachsetAge] = useState('');\n    const [VrachLastName, VrachsetLastName] = useState('');\n\n    const [VrachPhone, VrachsetPhone] = useState('');\n    const [VrachSchedule, setVrachSchedule] = useState('');\n    const [VrachSpecialization, setVrachSpecialization] = useState('');\n\n\n    \n    useEffect(() => {\n      getBooks();getPacient()\n    }, []);\n  \n    const getBooks = async () => {\n      const data = await BookDataService.getAllBooks();\n      console.log(data.docs);\n      setBooks(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n    };\n\n    const getPacient = async () => {\n        const data = await pacientServices.getAllBooks();\n        console.log(data.docs);\n        setPacient(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n      };\n\n\n\n    function handleChange(e){\n        \n        console.log(' setZayavka  iam in function handleChange  e target=  ',e.target); // for ex. will print USD\n        // const form = e.target;\n        // const formData = new FormData(form);\n        // const formJson = Object.fromEntries(formData.entries());\n        // console.log(' formJson= ',formJson)\n        setVrachName(e.target.value)\n        \n    \n   \n    }\n    \n    function handleChange2(e){\n        \n        console.log('iam in function handleChange2  e target=  ',e.target); // for ex. will print USD\n        // const form = e.target;\n        // const formData = new FormData(form);\n        // const formJson = Object.fromEntries(formData.entries());\n        // console.log(' formJson= ',formJson)\n        setZayavka(e.target.value) \n        setZayavkaTime(e.target.value)\n\n    }\n\n//select dropdown code------------------------\n\n//end of select dropdown code\n\n\n\n\n\n\nconst addTodo = async (e) => {\n    e.preventDefault();\n    console.log('this is e ',e.target)\n    try {\n        const docRef = await addDoc(collection(db, \"doctorSchedule\"), {\n            VrachName:VrachName,\n            VrachsetLastName:VrachLastName,\n            VrachAge:VrachAge,\n            VrachPhone:VrachPhone,\n            VrachSpecialization:VrachSpecialization,\n\n            name: Name,\n            lname: LastName,\n            phone: Phone,\n            age: Age,\n            address: Address,\n            zayavka:zayavka,\n            zayavkaTime:zayavkaTime,\n            created: Timestamp.now()\n        });\n        console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n        console.error(\"Error adding document: \", e);\n    }\n}\n\n\n\nreturn (\n    <>\n\n                    <label>\n                        Выберите врача:\n                        <select name=\"selectedFruit\" defaultValue=\"banana\" onChange={handleChange}>\n                        <option value=\"apple\">Apple</option>\n                        <option value=\"banana\">Banana</option>\n                        <option value=\"orange\">Orange</option>\n                       \n                            {books.map((doc, index) => {\n                                return (\n                                    <option value={doc.id}>\n                                    Имя:{doc.name}\n                                    Фамилия:{doc.LastName} \n                                    {/* {doc.Age}\n                                    {doc.Phone}\n                                    {doc.Schedule} */}\n                                    Специализация:{doc.Specialization}\n                                    Статус:{doc.status}\n                                  \n                                </option>\n                                );\n                            })}\n                        \n                        </select>\n                    </label>\n\n                    <label>\n                        Выберите Пациента:\n                        <select name=\"selectedFruit2\" defaultValue=\"orange\" onChange={handleChange2}>\n                        <option value=\"apple\">Apple</option>\n                        <option value=\"banana\">Banana</option>\n                        <option value=\"orange\">Orange</option>\n                       \n                            {pacient.map((doc, index) => {\n                                return (\n                                    <option value={doc.id}>\n                                        Имя:{doc.Name}\n                                        {/* Время заявки на врача: {doc.zayavkaTime}\n                                        Фамилия:{doc.LastName} \n                                        Заявка создана:{doc.created}\n                                        Телефон:{doc.Phone} */}\n                                        Статус Заявки:{doc.status}\n                                        Заявка на врача : {doc.zayavka}\n                                        Время заявки на врача: {doc.zayavkaTime}\n                                    \n                                </option>\n                                );\n                            })}\n                        \n                        </select>\n                    </label>\n\n\n                    {/* {books.map((doc, index) => {\n                                return (\n                                    <p value={doc.id}>\n                                    Имя:{doc.name}\n                                    Фамилия:{doc.LastName} \n                                    \n                                    Специализация:{doc.Specialization}\n                                    Статус:{doc.status}\n                                  \n                                </p>\n                                );\n                            })}\n<br /><br />\n<br />\n<br />\n<br />\n<br />\n\n\n                {pacient.map((doc, index) => {\n                                return (\n                                    <p value={doc.id}>\n                                    Имя:{doc.name}\n                                    Фамилия:{doc.LastName} \n                                  \n                                    Статус Заявки:{doc.status}\n                                    Заявка на врача : {doc.zayavka}\n                                    Время заявки на врача: {doc.zayavkaTime}\n                                  \n                                </p>\n                                );\n                            })}  */}\n\n        \n            <input type=\"text\" placeholder=\"Name\"\n                onChange={\n                    (e) => setName(e.target.value)\n                }/>\n            <input type=\"text\" placeholder=\"LastName\"\n                onChange={\n                    (e) => setLastName(e.target.value)\n                }/>\n            <input type=\"text\" placeholder=\"Set your Age\"\n                onChange={\n                    (e) => setAge(e.target.value)\n                }/>\n            <input type=\"text\" placeholder=\"Phone?\"\n                onChange={\n                    (e) => setPhone(e.target.value)\n                }/>\n            <input type=\"text\" placeholder=\"Address?\"\n                onChange={\n                    (e) => setAddress(e.target.value)\n                }/>\n\n        \n                \n           \n                    {/* <label>\n                        Выберите врача:\n                        <select name=\"selectedFruit\" defaultValue=\"orange\" onChange={handleChange}>\n                        <option value=\"apple\">Apple</option>\n                        <option value=\"banana\">Banana</option>\n                        <option value=\"orange\">Orange</option>\n                       \n                            {books.map((doc, index) => {\n                                return (\n                                    <option value={doc.id}>\n                                    Имя:{doc.name}\n                                    Фамилия:{doc.LastName} \n                                 \n                                    Специализация:{doc.Specialization}\n                                    Статус:{doc.status}\n                                  \n                                </option>\n                                );\n                            })}\n                        \n                        </select>\n                    </label>\n\n\n                    <label>\n                        Выберите Предпочитаемое время:\n                        <select name=\"selectedFruit2\" defaultValue=\"Выберите время\" onChange={handleChange2}>\n                        <option value=\"10:00-10:30\">10:00-10:30</option>\n                        <option value=\"10:30-11:00\">10:30-11:00</option>\n                        <option value=\"11:30-12:00\">11:30-12:00</option>\n                       \n                           \n                        \n                        </select>\n                    </label> */}\n\n\n                    {/* <label>\n                        Pick all your favorite vegetables:\n                        <select\n                        name=\"selectedVegetables\"\n                        multiple={true}\n                        defaultValue={['corn', 'tomato']}\n                        >\n                        <option value=\"cucumber\">Cucumber</option>\n                        <option value=\"corn\">Corn</option>\n                        <option value=\"tomato\">Tomato</option>\n                        </select>\n                    </label> */}\n                    <hr />\n                    {/* <button type=\"reset\">Reset</button> */}\n                     \n                  \n\n        <div className=\"btn-container\">\n            <Button type=\"submit\" className=\"btn bordered\" variant=\"dark edit\"\n                onClick={addTodo}>\n                Submit\n            </Button>\n        </div>\n        \n        \n\n        <br/><br/>\n        <p>--------------------exit------------------------------------------------</p>\n\n        {/* {books.map((doc, index) => {\n            return (\n              <tr key={doc.id}>\n                <td>{index + 1}</td>\n                <td>{doc.title}</td>\n                <td>{doc.author}</td>\n                <td>{doc.status}</td>\n                <td>{doc.name}</td>\n                <td>{doc.LastName}</td>\n                <td>{doc.Age}</td>\n                <td>{doc.Phone}</td>\n                <td>{doc.Schedule}</td>\n                <td>{doc.Specialization}</td>\n                <td>{doc.status}</td>\n               \n              </tr>\n            );\n          })} */}\n</>\n)\n}\n\nexport default AddRegisterOrder;\n\n\n\n\n\n\n\n\n// function getSepcificDataWithID() {\n//     getDoc(doc(db, \"users\", 'IMx2OXMCR0WD7upXNcKq')).then(docData => {\n\n//         if (docData.exists()) {\n//             console.log(docData.data());\n\n//             setName(docData.data().name);\n//             setPhone(docData.data().phone);\n//             setLastName(docData.data().lname);\n//             setAge(docData.data().age);\n//             setAddress(docData.data().address);\n\n//         } else {\n//             console.log('No such a data!');\n//         }\n\n//     }).catch((error) => {\n//         console.log(error);\n//     })\n// }\n\n// function update() {\n//     updateDoc(doc(db, \"pacients\"), {\n//       name: Name,\n//       phone: Phone,\n//       lname: LastName,\n//       age: Age,\n//       address: Address\n//     }).then(() => {\n//         console.log('data submitted');\n\n//     }).catch((error) => {\n//         console.log(error);\n//     });\n// }\n\n// function deleteData() {\n//     deleteDoc(doc(db, \"pacients\", 'LA'));\n// }\n\n// function getAlldata() {\n//     getDocs(collection(db, \"pacients\")).then(docSnap => {\n//         let users = [];\n//         docSnap.forEach((doc) => {\n//             users.push({\n//                 ...doc.data(),\n//                 id: doc.id\n//             })\n//         });\n//         console.log(\"Document data:\", users);\n//     });\n// }\n\n// function getDataWithQuery() {\n//     getDocs(query(collection(db, \"users\"), where('email', '==', 'NewUser@gmail.com'))).then(docSnap => {\n//         let users = [];\n//         docSnap.forEach((doc) => {\n//             users.push({\n//                 ...doc.data(),\n//                 id: doc.id\n//             })\n//         });\n//         console.log(\"Document data:\", users[0].username);\n//     });\n// }\n\n\n","import React, {useEffect, useState} from \"react\";\nimport {Table, Button} from \"react-bootstrap\";\nimport PacientDataService from \"../services/pacient.services\";\nimport AddBook from \"./AddBook\";\nimport { db } from \"../../firebase\";\nimport {collection, query, orderBy, onSnapshot, updateDoc} from \"firebase/firestore\"\nimport {useParams} from 'react-router-dom'\nimport AddPacient from \"./AddPacient\";\nimport BookDataService from \"../services/book.services\";\nimport AddRegisterOrder from \"./AddRegisterOrder\";\nimport Container from \"react-bootstrap\";\nconst RegisterOrderList = ({getBookId}) => {\n    \n    const [books, setBooks] = useState([]);\n    const [bookId, setBookId] = useState();\n    const [openAddModal, setOpenAddModal] = useState(false)\n    const [doctors, setDoctors] = useState([]);\n    \n    useEffect(() => {\n        getBooks();\n        getDoctors();\n    }, []);\n\n    // useEffect(() => {\n    //   const taskColRef = query(collection(db, 'doctorsList'))\n    //   onSnapshot(taskColRef, (snapshot) => {\n    //     getBooks(snapshot.docs.map(doc => ({\n    //       id: doc.id,\n    //       data: doc.data()\n    //     })))})\n    // },[])\n    const getBookIdHandler = (getBookId) => {\n        console.log(\"The ID of document to be edited: \", getBookId);\n        setBookId(getBookId);\n    };\n\n    const getDoctors = async (id) => {\n        const dataDoctors = await BookDataService.getAllBooks();\n        console.log(dataDoctors.docs);\n        setDoctors(dataDoctors.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id\n        })));\n    };\n\n\n\n    const getBooks = async (id) => {\n        const data = await PacientDataService.getAllBooks();\n        console.log('QUERY to db  ',data.docs);\n        // setBooks(data.docs.map((doc) => ({\n        //     ...doc.data(),\n        //     id: doc.id\n        // })));\n    };\n\n  \n    const deleteHandler = async (id) => {\n        await PacientDataService.deleteBook(id);\n        getBooks();\n    };\n\n\n    return (<> \n        \n        {/* <AddRegisterOrder id={bookId}\n                 setBookId={setBookId}\n                 onClose={ () => setOpenAddModal(false)}\n                 open={openAddModal}\n                 /> */}\n        \n\n        <div className=\"mb-2\">\n            <Button variant=\"dark edit\"\n                onClick={getBooks}>\n                Refresh List\n            </Button>\n        </div>\n\n        {/* <pre>{JSON.stringify(books, undefined, 2)}</pre>} */}\n        <Table striped bordered hover size=\"sm\">\n            <thead>\n                <tr> {/* <th>#</th>\n            <th>Book Title</th>\n            <th>Book Author</th>\n            <th>Status</th> */}\n                  \n                  \n                  <th>Название компании</th>\n                    <th>БИН компании</th>\n                    <th>ФИО </th>\n                    <th>Наименование обьекта</th>\n                    <th>Телефон</th>\n                    <th>zayavka time</th>\n                    <th>Status</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody> {\n                books.map((doc, index) => {\n                    return (\n                        <tr key={\n                            doc.id\n                        }>\n                            {/* <td>{index + 1}</td>\n                <td>{doc.title}</td>\n                <td>{doc.author}</td>\n                <td>{doc.status}</td> */}\n                              <td>{\n                                doc.companyName\n                            }</td>\n                            <td>{\n                                doc.companyBin\n                            }</td>\n                            <td>{\n                                doc.fio\n                            }</td>\n                            <td>{\n                                doc.objectName\n                            }</td>\n                            <td>{\n                                doc.phone\n                            }</td>\n                            <td>{\n                                doc.zayavkaTime\n                            }</td>\n                            <td>{\n                                doc.status\n                            }</td>\n                            <td>\n                                <Button variant=\"secondary\" className=\"edit\"\n                                    onClick={\n                                        (e) => (getBookId(doc.id), \n                                        setOpenAddModal(true),\n                                        getBookIdHandler(doc.id)\n                                        )\n                                        \n                                }>\n                                    Edit\n                                </Button>\n\n                                <Button variant=\"danger\" className=\"delete\"\n                                    onClick={\n                                        (e) => deleteHandler(doc.id)\n                                }>\n                                    Delete\n                                </Button>\n                            </td>\n                        </tr>\n                    );\n                })\n            } </tbody>\n        </Table>\n    </>\n    );\n    };\n    \n    export default RegisterOrderList;\n\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport PhoneSignUp from \"./components/PhoneSignUp\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport { UserAuthContextProvider } from \"./context/UserAuthContext\";\nimport {db} from './firebase'\nimport {collection, addDoc, Timestamp} from 'firebase/firestore'\nimport Home from \"./components/buisnessLogic/Home\";\n// import AddPacient from \"./components/buisnessLogic/AddPacient\";\nimport AddDoctor from './components/buisnessLogic/AddDoctor'\nimport DoctorsList from \"./components/buisnessLogic/DoctorsList\";\nimport AddRegisterOrder from \"./components/buisnessLogic/AddRegisterOrder\";\nimport RegisterOrderList from \"./components/buisnessLogic/RegisterOrderList\";\nimport AddPacient from \"./components/buisnessLogic/AddPacient\";\nimport PacientsList from \"./components/buisnessLogic/PacientsList\";\n// import PacientsList from \"./components/buisnessLogic/PacientsList\";\n\n// import NewPacient from \"./components/buisnessLogic/AddPacient\";\nfunction App() {\n  const [bookId, setBookId] = useState(\"\");\n\n  const getBookIdHandler = (id) => {\n  \n    setBookId(id);\n    console.log(\"BookId -  \", bookId);\n  };\n  \n  return (\n    <Container className=\"container\">\n      <Row>\n        <Col>\n          <UserAuthContextProvider>\n            <Routes>\n              <Route\n                path=\"/home\"\n                element={\n                  <ProtectedRoute>\n                    <Home />\n                  </ProtectedRoute>\n                }\n              />\n              <Route path=\"/\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/phonesignup\" element={<PhoneSignUp />} />\n              \n            \n              {/* <Route path=\"/buisnessLogic/AddPacient\" element={ <AddPacient/> } />\n               */}\n              <Route path=\"/buisnessLogic/AddDoctor\" element={ <AddDoctor/> } />\n              <Route path=\"/buisnessLogic/DoctorsList\" element={ <DoctorsList/> } />\n              <Route path=\"/buisnessLogic/RegisterOrderList\" element={ <RegisterOrderList/> } />\n              <Route path=\"/buisnessLogic/AddRegisterOrder\" element={ <AddRegisterOrder/> } />\n              <Route path=\"/buisnessLogic/AddPacient\" element={ <AddPacient/>}/>\n              <Route path=\"/buisnessLogic/PacientsList\" element={ <PacientsList/>}/>\n              {/* {/* <Route path=\"/buisnessLogic/PacientsList\" element={ <PacientsList/> } /> */}\n             \n              {/* <Route path=\"/buisnessLogic/NewPacient\" element={ <NewPacient/> } /> */}\n\n\n            </Routes>\n          </UserAuthContextProvider>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}